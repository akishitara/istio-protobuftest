// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/protocol.proto

package books

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BooksRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Page                 int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BooksRequest) Reset()         { *m = BooksRequest{} }
func (m *BooksRequest) String() string { return proto.CompactTextString(m) }
func (*BooksRequest) ProtoMessage()    {}
func (*BooksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_ed0fb277629304be, []int{0}
}
func (m *BooksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooksRequest.Unmarshal(m, b)
}
func (m *BooksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooksRequest.Marshal(b, m, deterministic)
}
func (dst *BooksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooksRequest.Merge(dst, src)
}
func (m *BooksRequest) XXX_Size() int {
	return xxx_messageInfo_BooksRequest.Size(m)
}
func (m *BooksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BooksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BooksRequest proto.InternalMessageInfo

func (m *BooksRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BooksRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type BooksReply struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BooksReply) Reset()         { *m = BooksReply{} }
func (m *BooksReply) String() string { return proto.CompactTextString(m) }
func (*BooksReply) ProtoMessage()    {}
func (*BooksReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_ed0fb277629304be, []int{1}
}
func (m *BooksReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooksReply.Unmarshal(m, b)
}
func (m *BooksReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooksReply.Marshal(b, m, deterministic)
}
func (dst *BooksReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooksReply.Merge(dst, src)
}
func (m *BooksReply) XXX_Size() int {
	return xxx_messageInfo_BooksReply.Size(m)
}
func (m *BooksReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BooksReply.DiscardUnknown(m)
}

var xxx_messageInfo_BooksReply proto.InternalMessageInfo

func (m *BooksReply) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*BooksRequest)(nil), "books.BooksRequest")
	proto.RegisterType((*BooksReply)(nil), "books.BooksReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BooksServerClient is the client API for BooksServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BooksServerClient interface {
	SearchTitle(ctx context.Context, in *BooksRequest, opts ...grpc.CallOption) (*BooksReply, error)
}

type booksServerClient struct {
	cc *grpc.ClientConn
}

func NewBooksServerClient(cc *grpc.ClientConn) BooksServerClient {
	return &booksServerClient{cc}
}

func (c *booksServerClient) SearchTitle(ctx context.Context, in *BooksRequest, opts ...grpc.CallOption) (*BooksReply, error) {
	out := new(BooksReply)
	err := c.cc.Invoke(ctx, "/books.BooksServer/SearchTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BooksServerServer is the server API for BooksServer service.
type BooksServerServer interface {
	SearchTitle(context.Context, *BooksRequest) (*BooksReply, error)
}

func RegisterBooksServerServer(s *grpc.Server, srv BooksServerServer) {
	s.RegisterService(&_BooksServer_serviceDesc, srv)
}

func _BooksServer_SearchTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BooksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksServerServer).SearchTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/books.BooksServer/SearchTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksServerServer).SearchTitle(ctx, req.(*BooksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BooksServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "books.BooksServer",
	HandlerType: (*BooksServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchTitle",
			Handler:    _BooksServer_SearchTitle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protocol/protocol.proto",
}

func init() { proto.RegisterFile("protocol/protocol.proto", fileDescriptor_protocol_ed0fb277629304be) }

var fileDescriptor_protocol_ed0fb277629304be = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x87, 0x31, 0xf4, 0xc0, 0x0c, 0x21, 0xd6, 0xa4, 0xfc, 0xfc, 0xec,
	0x62, 0x25, 0x33, 0x2e, 0x1e, 0x27, 0x10, 0x23, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48,
	0x88, 0x8b, 0x25, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x06,
	0x89, 0x15, 0x24, 0xa6, 0xa7, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0xb0, 0x06, 0x81, 0xd9, 0x4a, 0x4a,
	0x5c, 0x5c, 0x50, 0x7d, 0x05, 0x39, 0x95, 0x42, 0x22, 0x5c, 0xac, 0x25, 0x99, 0x25, 0x39, 0x30,
	0x6d, 0x10, 0x8e, 0x91, 0x1b, 0x17, 0x37, 0x58, 0x4d, 0x70, 0x6a, 0x51, 0x59, 0x6a, 0x91, 0x90,
	0x39, 0x17, 0x77, 0x70, 0x6a, 0x62, 0x51, 0x72, 0x46, 0x08, 0x48, 0x56, 0x48, 0x58, 0x0f, 0xec,
	0x02, 0x3d, 0x64, 0xeb, 0xa5, 0x04, 0x51, 0x05, 0x0b, 0x72, 0x2a, 0x95, 0x18, 0x92, 0xd8, 0xc0,
	0x2e, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x01, 0x4c, 0xc9, 0xcc, 0x00, 0x00, 0x00,
}
